<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="Webgriffe\SyliusClerkPlugin\Controller\FeedController" public="true">
            <argument id="Webgriffe\SyliusClerkPlugin\Service\FeedGenerator" type="service"/>
            <argument id="sylius.repository.channel" type="service"/>
            <argument id="Webgriffe\SyliusClerkPlugin\Service\PrivateApiKeyProvider" type="service" />
            <argument id="webgriffe_sylius_clerk.checker.channel_enabled" type="service" />
            <tag name="controller.service_arguments"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Controller\TrackingCodeController" public="true">
            <argument id="sylius.context.channel" type="service"/>
            <argument id="Webgriffe\SyliusClerkPlugin\Service\PublicApiKeyProvider" type="service" />
            <argument id="webgriffe_sylius_clerk.checker.channel_enabled" type="service" />
            <tag name="controller.service_arguments"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Controller\SalesTrackingController" public="true">
            <argument id="sylius.repository.order" type="service"/>
            <argument id="serializer" type="service"/>
            <argument id="webgriffe_sylius_clerk.checker.channel_enabled" type="service" />
            <tag name="controller.service_arguments"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Service\FeedGenerator">
            <argument id="Webgriffe\SyliusClerkPlugin\QueryBuilder\ProductsQueryBuilderFactory" type="service" />
            <argument id="Webgriffe\SyliusClerkPlugin\QueryBuilder\TaxonsQueryBuilderFactory" type="service" />
            <argument id="Webgriffe\SyliusClerkPlugin\QueryBuilder\OrdersQueryBuilderFactory" type="service" />
            <argument id="Webgriffe\SyliusClerkPlugin\QueryBuilder\CustomersQueryBuilderFactory" type="service" />
            <argument id="Webgriffe\SyliusClerkPlugin\Resolver\PageResolver" type="service" />
            <argument id="serializer" type="service"/>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Normalizer\ProductNormalizer">
            <argument id="sylius.product_variant_resolver.default" type="service"/>
            <argument id="router" type="service"/>
            <argument id="liip_imagine.service.filter" type="service"/>
            <tag name="serializer.normalizer" priority="120" />
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Normalizer\TaxonNormalizer">
            <argument id="router" type="service"/>
            <argument id="sylius.repository.taxon" type="service"/>
            <tag name="serializer.normalizer" priority="120" />
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Normalizer\OrderNormalizer">
            <tag name="serializer.normalizer" priority="120" />
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Normalizer\CustomerNormalizer">
            <tag name="serializer.normalizer" priority="120" />
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\QueryBuilder\ProductsQueryBuilderFactory">
            <argument id="sylius.repository.product" type="service"/>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\QueryBuilder\TaxonsQueryBuilderFactory">
            <argument id="sylius.repository.taxon" type="service"/>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\QueryBuilder\OrdersQueryBuilderFactory">
            <argument id="sylius.repository.order" type="service"/>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\QueryBuilder\CustomersQueryBuilderFactory">
            <argument id="sylius.repository.customer" type="service"/>
        </service>

        <service id="Webgriffe\SyliusClerkPlugin\Resolver\PageResolver" />

        <service id="webgriffe_sylius_clerk.provider.private_api_key" class="Webgriffe\SyliusClerkPlugin\Service\PrivateApiKeyProvider">
            <argument/>
        </service>

        <!-- The following alias is for BC compatibility and could be removed in 3.x. -->
        <service id="Webgriffe\SyliusClerkPlugin\Service\PrivateApiKeyProvider" alias="webgriffe_sylius_clerk.provider.private_api_key" />

        <service id="webgriffe_sylius_clerk.provider.public_api_key" class="Webgriffe\SyliusClerkPlugin\Service\PublicApiKeyProvider">
            <argument/>
        </service>

        <!-- The following alias is for BC compatibility and could be removed in 3.x. -->
        <service id="Webgriffe\SyliusClerkPlugin\Service\PublicApiKeyProvider" alias="webgriffe_sylius_clerk.provider.public_api_key" />

        <service id="webgriffe_sylius_clerk.checker.channel_enabled" class="Webgriffe\SyliusClerkPlugin\Service\ChannelApiKeyChecker">
            <argument type="service" id="webgriffe_sylius_clerk.provider.public_api_key"/>
            <argument type="service" id="webgriffe_sylius_clerk.provider.private_api_key"/>
        </service>

        <service id="webgriffe_sylius_clerk.command.generate_feed" class="Webgriffe\SyliusClerkPlugin\Command\FeedGeneratorCommand">
            <argument id="Webgriffe\SyliusClerkPlugin\Service\FeedGenerator" type="service"/>
            <argument id="sylius.repository.channel" type="service" />
            <argument id="router" type="service" />
            <argument id="monolog.logger" type="service" />
            <argument>%webgriffe_sylius_clerk.storage_feed_path%</argument>
            <tag name="console.command"/>
        </service>
    </services>
</container>
